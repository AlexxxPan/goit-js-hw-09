{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBA4B3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CApCKN,SAASC,cAAc,yBAE/BY,iBAAiB,SAE3B,SAAyBC,GACvBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOlB,EAAWmB,OAC1BC,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAEhC,GAAInB,EAAWmB,MAAQ,GAAKhB,EAAUgB,MAAQ,GAAKf,EAAYe,OAAS,EACtE,OAAQrB,EAAAwB,OAAOC,QAAQ,mCAGzB,IAAK,IAAIC,EAAW,EAAGA,GAAYH,EAAQG,GAAY,EACrDnB,EAAcmB,EAAUP,GACrBQ,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBT,EAAAwB,OAAOI,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAwB,OAAOM,QAAQ,sBAAoBtB,QAAiBC,MAAU,IAElEU,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst btnSubmit = document.querySelector('button[type=\"submit\"]');\n\nbtnSubmit.addEventListener('click', onBtnStartClick);\n\nfunction onBtnStartClick(e) {\n  e.preventDefault();\n\n  let delay = Number(delayInput.value);\n  let step = Number(stepInput.value);\n  let amount = Number(amountInput.value);\n\n  if (delayInput.value < 0 || stepInput.value < 0 || amountInput.value <= 0) {\n    return  Notify.warning('Please enter enter correct data');\n}\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// import Notiflix from 'notiflix';\n// const delay = document.querySelector('input[name=\"delay\"]');\n// const step = document.querySelector('input[name=\"step\"]');\n// const amount = document.querySelector('input[name=\"amount\"]');\n// const btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\n// function createPromise(position, delay) {\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n//   return promise;\n// }\n\n// btnCreatePromise.addEventListener('click', e => {\n//   e.preventDefault();\n//   let firstDelay = Number(delay.value);\n//   let delayStep = Number(step.value);\n//   if (delay.value < 0 || step.value < 0 || amount.value <= 0) {\n//     return  Notiflix.Notify.warning('Please enter enter correct data');\n// }\n\n//   for (let i = 0; i < amount.value; i++) {\n//     createPromise(1 + i, firstDelay + i * delayStep)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`\n//         );\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(\n//           `❌ Rejected promise ${position} in ${delay}ms`\n//         );\n//       });\n//   }\n// });\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","Notify","warning","position1","then","success","catch","failure"],"version":3,"file":"03-promises.ed591d4f.js.map"}