{"mappings":"iiBAyCA,IAAAA,EAAAC,EAAA,SACMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAGtC,SAASG,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAXkBN,SAASC,cAAc,yBAgB/Ba,iBAAiB,SAAS,SAAAC,GACzCA,EAAEC,iBACF,IAAIC,EAAaC,OAAOnB,EAAMoB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OAC5B,GAAIpB,EAAMoB,MAAQ,GAAKjB,EAAKiB,MAAQ,GAAKhB,EAAOgB,OAAS,EACvD,OAAQE,EAAAxB,GAASyB,OAAOC,QAAQ,mCAGlC,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,EAAOgB,MAAOK,IAChCpB,EAAc,EAAIoB,EAAGP,EAAaO,EAAIJ,GACnCK,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUsB,EAAKD,EAALb,MACjBQ,EAAAxB,GAASyB,OAAOM,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANF,EAAM,M,IAGjDG,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAU0B,EAAKL,EAALb,MAClBQ,EAAAxB,GAASyB,OAAOU,QACd,sBAAqCH,OAAfxB,EAAS,QAAYwB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// import { Notify } from \"notiflix\";\n\n// const delayInput = document.querySelector('input[name=\"delay\"]');\n// const stepInput = document.querySelector('input[name=\"step\"]');\n// const amountInput = document.querySelector('input[name=\"amount\"]');\n// const btnSubmit = document.querySelector('button[type=\"submit\"]');\n\n// btnSubmit.addEventListener('click', onBtnStartClick);\n\n// function onBtnStartClick(e) {\n//   e.preventDefault();\n\n//   let delay = Number(delayInput.value);\n//   let step = Number(stepInput.value);\n//   let amount = Number(amountInput.value);\n\n//   for (let position = 1; position <= amount; position += 1) {\n//     createPromise(position, delay)\n//       .then(({ position, delay }) => {\n//         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//     delay += step;\n//   }\n// }\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\nimport Notiflix from 'notiflix';\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nbtnCreatePromise.addEventListener('click', e => {\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  if (delay.value < 0 || step.value < 0 || amount.value <= 0) {\n    return  Notiflix.Notify.warning('Please enter enter correct data');\n}\n\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","$parcel$interopDefault","Notify","warning","i","then","param","delay2","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.232ff174.js.map"}